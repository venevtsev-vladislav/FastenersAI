"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–∏—Å—Ç–µ–º—ã –≤–∞–ª–∏–¥–∞—Ü–∏–∏
"""

import asyncio
import sys
import os

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –ø—Ä–æ–µ–∫—Ç—É
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

from services.validation_service import ValidationService

async def test_validation():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç —Å–∏—Å—Ç–µ–º—É –≤–∞–ª–∏–¥–∞—Ü–∏–∏"""
    
    # –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
    original_request = """1. DIN 603 –í–∏–Ω—Ç –º–µ–±–µ–ª—å–Ω—ã–π 6 √ó 40 Zn ‚Äî 200 —à—Ç
2. DIN 603 –í–∏–Ω—Ç –º–µ–±–µ–ª—å–Ω—ã–π 8 √ó 80 Zn ‚Äî 200 —à—Ç
3. DIN 965 M 6 √ó 20 –í–∏–Ω—Ç A2 ‚Äî 100 —à—Ç
4. DIN 965 M 4 √ó 25 –í–∏–Ω—Ç ZN ‚Äî 200 —à—Ç
5. DIN 965 M 6 √ó 25 –í–∏–Ω—Ç ZN ‚Äî 200 —à—Ç
6. DIN 985 M 6 –ì–∞–π–∫–∞ —Å–∞–º–æ–∫–æ–Ω—Ç—Ä. A2 ‚Äî 200 —à—Ç
7. –°–∞–º–æ—Ä–µ–∑—ã –ø–æ –¥–µ—Ä–µ–≤—É —Å —Ñ—Ä–µ–∑–æ–π —Ç–∞—Ä–µ–ª—å—á. 6,0 √ó 180 –º–º –∂.—Ü TX 30 ‚Äî 100 —à—Ç
8. –¢—Ä–æ—Å 3/4 –º–º –≤ –∏–∑–æ–ª—è—Ü–∏–∏ (200 –º) Zn ‚Äî 100 –º
9. DIN 125 M 6 –®–∞–π–±–∞ A2 ‚Äî 500 —à—Ç
10. DIN 9021 –®–∞–π–±–∞ –∫—É–∑–æ–≤–Ω–∞—è M 8 A2 ‚Äî 100 —à—Ç
11. –®—É—Ä—É–ø —É–Ω–∏–≤. UK APT 9050 4 √ó 16 A2 ‚Äî 200 —à—Ç
12. –®—É—Ä—É–ø —É–Ω–∏–≤. UK APT 9050 6 √ó 70 A2 ‚Äî 50 —à—Ç"""
    
    search_results = [
        # –ü–æ–∑–∏—Ü–∏—è 1 - –Ω–µ –Ω–∞–π–¥–µ–Ω–æ
        {
            'order_position': 1,
            'full_query': '–≤–∏–Ω—Ç DIN 603 6 –º–º 40 –º–º –º–µ—Ç–∞–ª–ª —Ü–∏–Ω–∫',
            'sku': '–ù–ï –ù–ê–ô–î–ï–ù–û',
            'name': '–î–µ—Ç–∞–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –≤ –∫–∞—Ç–∞–ª–æ–≥–µ',
            'type': '–≤–∏–Ω—Ç',
            'confidence_score': 0.0
        },
        # –ü–æ–∑–∏—Ü–∏—è 6 - –Ω–∞–π–¥–µ–Ω–æ
        {
            'order_position': 6,
            'full_query': '–≥–∞–π–∫–∞ M6 DIN 985 A2',
            'sku': '10-0023800',
            'name': '–ì–∞–π–∫–∞ DIN 985 A2 M6',
            'type': '–≥–∞–π–∫–∞',
            'confidence_score': 0.9
        },
        # –ü–æ–∑–∏—Ü–∏—è 7 - –Ω–∞–π–¥–µ–Ω–æ –Ω–µ—Å–∫–æ–ª—å–∫–æ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤
        {
            'order_position': 7,
            'full_query': '—Å–∞–º–æ—Ä–µ–∑ 6,0 –º–º 180 –º–º –º–µ—Ç–∞–ª–ª –∂–µ–ª–µ–∑–æ',
            'sku': '14-0011350',
            'name': '–°–∞–º–æ—Ä–µ–∑ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ü.—É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π 6,0 x 80 –∂–µ–ª—Ç.,–ø—Ä–µ—Å—Å-—à–∞–π–±–∞ TX30, Bullit',
            'type': '—Å–∞–º–æ—Ä–µ–∑',
            'confidence_score': 0.8
        },
        {
            'order_position': 7,
            'full_query': '—Å–∞–º–æ—Ä–µ–∑ 6,0 –º–º 180 –º–º –º–µ—Ç–∞–ª–ª –∂–µ–ª–µ–∑–æ',
            'sku': '14-0010890',
            'name': '–°–∞–º–æ—Ä–µ–∑ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ü.—É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π 6,0 x 120 –∂–µ–ª—Ç.,–ø–æ—Ç–∞–π TX30, Bullit',
            'type': '—Å–∞–º–æ—Ä–µ–∑',
            'confidence_score': 0.8
        },
        {
            'order_position': 7,
            'full_query': '—Å–∞–º–æ—Ä–µ–∑ 6,0 –º–º 180 –º–º –º–µ—Ç–∞–ª–ª –∂–µ–ª–µ–∑–æ',
            'sku': '14-0011250',
            'name': '–°–∞–º–æ—Ä–µ–∑ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ü.—É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π 6,0 x 180 –∂–µ–ª—Ç.,–ø—Ä–µ—Å—Å-—à–∞–π–±–∞ TX30, Bullit',
            'type': '—Å–∞–º–æ—Ä–µ–∑',
            'confidence_score': 0.9
        }
    ]
    
    print("üß™ –¢–µ—Å—Ç–∏—Ä—É—é —Å–∏—Å—Ç–µ–º—É –≤–∞–ª–∏–¥–∞—Ü–∏–∏...")
    print(f"üìù –ò—Å—Ö–æ–¥–Ω—ã–π –∑–∞–ø—Ä–æ—Å: {len(original_request)} —Å–∏–º–≤–æ–ª–æ–≤")
    print(f"üîç –†–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –ø–æ–∏—Å–∫–∞: {len(search_results)}")
    
    try:
        # –°–æ–∑–¥–∞–µ–º —Å–µ—Ä–≤–∏—Å –≤–∞–ª–∏–¥–∞—Ü–∏–∏
        validation_service = ValidationService()
        
        # –ó–∞–ø—É—Å–∫–∞–µ–º –≤–∞–ª–∏–¥–∞—Ü–∏—é
        print("\nüîç –ó–∞–ø—É—Å–∫–∞—é –≤–∞–ª–∏–¥–∞—Ü–∏—é...")
        validation_result = await validation_service.validate_search_results(
            original_request=original_request,
            search_results=search_results
        )
        
        # –í—ã–≤–æ–¥–∏–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
        print(f"\n‚úÖ –†–µ–∑—É–ª—å—Ç–∞—Ç –≤–∞–ª–∏–¥–∞—Ü–∏–∏:")
        print(f"–°—Ç–∞—Ç—É—Å: {validation_result.get('status')}")
        print(f"–£–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å: {validation_result.get('confidence', 0):.2f}")
        print(f"–°–æ–æ–±—â–µ–Ω–∏–µ: {validation_result.get('message', '')}")
        
        # –§–æ—Ä–º–∏—Ä—É–µ–º –∫—Ä–∞—Ç–∫–æ–µ —Ä–µ–∑—é–º–µ
        summary = validation_service.get_validation_summary(validation_result)
        print(f"\nüìã –ö—Ä–∞—Ç–∫–æ–µ —Ä–µ–∑—é–º–µ:")
        print(summary)
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏: {e}")
        import traceback
        traceback.print_exc()

if __name__ == "__main__":
    # –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç
    asyncio.run(test_validation())
