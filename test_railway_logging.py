#!/usr/bin/env python3
"""
–¢–µ—Å—Ç —É–ª—É—á—à–µ–Ω–Ω–æ–≥–æ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è –¥–ª—è Railway
–ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ª–æ–≥–∏ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –æ—Ç–æ–±—Ä–∞–∂–∞—é—Ç—Å—è –≤ –∫–æ–Ω—Å–æ–ª–∏
"""

import asyncio
import sys
import os

# –î–æ–±–∞–≤–ª—è–µ–º —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫—É—é –ø–∞–ø–∫—É –≤ –ø—É—Ç—å –¥–ª—è –∏–º–ø–æ—Ä—Ç–∞
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

from railway_logging import setup_railway_logging, log_gpt_request, log_gpt_response, log_processing_pipeline, log_error
from services.openai_service import OpenAIService

async def test_railway_logging():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º —É–ª—É—á—à–µ–Ω–Ω–æ–µ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ"""
    
    print("üîç –¢–ï–°–¢ –£–õ–£–ß–®–ï–ù–ù–û–ì–û –õ–û–ì–ò–†–û–í–ê–ù–ò–Ø –î–õ–Ø RAILWAY")
    print("=" * 60)
    
    # –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
    setup_railway_logging()
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ä–∞–∑–ª–∏—á–Ω—ã–µ —Ç–∏–ø—ã –ª–æ–≥–æ–≤
    print("\nüìù –¢–ï–°–¢–ò–†–£–ï–ú –†–ê–ó–õ–ò–ß–ù–´–ï –¢–ò–ü–´ –õ–û–ì–û–í")
    print("-" * 40)
    
    # –¢–µ—Å—Ç 1: –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ GPT –∑–∞–ø—Ä–æ—Å–∞
    test_text = "–ê–Ω–∫–µ—Ä —Å –∫–æ–ª—å—Ü–æ–º –º8 10—Ö100 (30—à—Ç)"
    log_gpt_request(test_text, user_id="12345", chat_id="67890")
    
    # –¢–µ—Å—Ç 2: –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ GPT –æ—Ç–≤–µ—Ç–∞
    test_response = {
        "items": [
            {
                "type": "–∞–Ω–∫–µ—Ä",
                "diameter": "M8",
                "length": "10—Ö100 –º–º",
                "quantity": "30—à—Ç",
                "confidence": 0.95
            }
        ]
    }
    log_gpt_response(test_response, user_id="12345", chat_id="67890")
    
    # –¢–µ—Å—Ç 3: –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ pipeline
    log_processing_pipeline("TEXT_MESSAGE_RECEIVED", {"text": test_text[:100]}, "12345", "67890")
    log_processing_pipeline("STARTING_PROCESSING", {"input_text": test_text[:100]}, "12345", "67890")
    log_processing_pipeline("PROCESSING_COMPLETED", {"results_count": 1}, "12345", "67890")
    
    # –¢–µ—Å—Ç 4: –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—à–∏–±–∫–∏
    try:
        raise ValueError("–¢–µ—Å—Ç–æ–≤–∞—è –æ—à–∏–±–∫–∞ –¥–ª—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è")
    except Exception as e:
        log_error(e, "TEST_ERROR", "12345", "67890")
    
    print("\n‚úÖ –í–°–ï –¢–ï–°–¢–´ –õ–û–ì–ò–†–û–í–ê–ù–ò–Ø –ó–ê–í–ï–†–®–ï–ù–´")
    print("=" * 60)
    
    # –¢–µ—Å—Ç 5: –†–µ–∞–ª—å–Ω—ã–π GPT –∑–∞–ø—Ä–æ—Å —Å –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ–º
    print("\nü§ñ –¢–ï–°–¢ –†–ï–ê–õ–¨–ù–û–ì–û GPT –ó–ê–ü–†–û–°–ê –° –õ–û–ì–ò–†–û–í–ê–ù–ò–ï–ú")
    print("-" * 40)
    
    try:
        openai_service = OpenAIService()
        print("‚úÖ OpenAI —Å–µ—Ä–≤–∏—Å –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω")
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å —Å –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ–º
        result = await openai_service.analyze_with_assistant(test_text)
        
        print("‚úÖ GPT –∑–∞–ø—Ä–æ—Å –∑–∞–≤–µ—Ä—à–µ–Ω —Å –¥–µ—Ç–∞–ª—å–Ω—ã–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ–º")
        print(f"üìä –†–µ–∑—É–ª—å—Ç–∞—Ç: {result}")
        
    except Exception as e:
        log_error(e, "GPT_TEST_ERROR", "12345", "67890")
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ GPT: {e}")
    
    print("\nüéâ –¢–ï–°–¢ –ó–ê–í–ï–†–®–ï–ù!")
    print("–¢–µ–ø–µ—Ä—å —ç—Ç–∏ –∂–µ –ª–æ–≥–∏ –±—É–¥—É—Ç –≤–∏–¥–Ω—ã –≤ Railway Dashboard")

if __name__ == "__main__":
    asyncio.run(test_railway_logging())
