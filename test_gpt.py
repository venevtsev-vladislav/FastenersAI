#!/usr/bin/env python3
"""
–¢–µ—Å—Ç —Ä–∞–±–æ—Ç—ã GPT –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏
"""

import asyncio
import sys
import os

# –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ–∫—É—â—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –≤ –ø—É—Ç—å
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

async def test_gpt():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç —Ä–∞–±–æ—Ç—É GPT"""
    print("üß† –¢–µ—Å—Ç–∏—Ä—É—é GPT –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—é...")
    
    try:
        # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Å–µ—Ä–≤–∏—Å
        from services.openai_service import OpenAIService
        
        # –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä
        gpt_service = OpenAIService()
        print("   ‚úÖ GPT —Å–µ—Ä–≤–∏—Å —Å–æ–∑–¥–∞–Ω")
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –∞–Ω–∞–ª–∏–∑ –∑–∞–ø—Ä–æ—Å–∞
        test_query = "–ù—É–∂–µ–Ω –±–æ–ª—Ç –ú8—Ö20 —Å —à–µ—Å—Ç–∏–≥—Ä–∞–Ω–Ω–æ–π –≥–æ–ª–æ–≤–∫–æ–π"
        print(f"   üîç –¢–µ—Å—Ç–∏—Ä—É—é –∑–∞–ø—Ä–æ—Å: '{test_query}'")
        
        result = await gpt_service.analyze_user_intent(test_query)
        print("   ‚úÖ GPT –∞–Ω–∞–ª–∏–∑ –∑–∞–≤–µ—Ä—à–µ–Ω")
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
        print("   üìä –†–µ–∑—É–ª—å—Ç–∞—Ç –∞–Ω–∞–ª–∏–∑–∞:")
        for key, value in result.items():
            if value is not None:
                print(f"      {key}: {value}")
        
        return True
        
    except Exception as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞: {e}")
        import traceback
        traceback.print_exc()
        return False

if __name__ == "__main__":
    success = asyncio.run(test_gpt())
    if success:
        print("\n‚úÖ GPT —Ç–µ—Å—Ç –ø—Ä–æ–π–¥–µ–Ω! OpenAI API —Ä–∞–±–æ—Ç–∞–µ—Ç.")
    else:
        print("\n‚ùå GPT —Ç–µ—Å—Ç –Ω–µ –ø—Ä–æ–π–¥–µ–Ω. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ API –∫–ª—é—á.")
        sys.exit(1)

