"""
–£–ø—Ä–æ—â–µ–Ω–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–æ–±—â–µ–Ω–∏–π –¥–ª—è lightweight –≤–µ—Ä—Å–∏–∏ –±–æ—Ç–∞
"""

import logging
from datetime import datetime
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import ContextTypes

logger = logging.getLogger(__name__)

async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–£–ø—Ä–æ—â–µ–Ω–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—Å–µ—Ö —Ç–∏–ø–æ–≤ —Å–æ–æ–±—â–µ–Ω–∏–π –¥–ª—è lightweight –≤–µ—Ä—Å–∏–∏"""
    try:
        user = update.effective_user
        chat_id = update.effective_chat.id
        message = update.message
        
        logger.info(f"–ü–æ–ª—É—á–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user.id} –≤ —á–∞—Ç–µ {chat_id}")
        
        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–∏–ø —Å–æ–æ–±—â–µ–Ω–∏—è
        if message.text:
            await _handle_text_message(update, context)
        elif message.photo:
            await _handle_photo_message(update, context)
        elif message.voice:
            await _handle_voice_message(update, context)
        elif message.document:
            await _handle_document_message(update, context)
        else:
            await message.reply_text("‚ùì –ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Ç–∏–ø —Å–æ–æ–±—â–µ–Ω–∏—è. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Ç–µ–∫—Å—Ç, —Ñ–æ—Ç–æ, –≥–æ–ª–æ—Å–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏–ª–∏ –¥–æ–∫—É–º–µ–Ω—Ç.")
            
    except Exception as e:
        logger.error(f"–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –≤ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–µ —Å–æ–æ–±—â–µ–Ω–∏–π: {e}")
        try:
            await update.message.reply_text("‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞. –û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É.")
        except:
            pass

async def _handle_text_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π"""
    try:
        message = update.message
        user_message = message.text
        user = update.effective_user
        
        logger.info(f"–û–±—Ä–∞–±–æ—Ç–∫–∞ —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç {user.id}: {user_message[:100]}...")
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –Ω–∞—á–∞–ª–µ –æ–±—Ä–∞–±–æ—Ç–∫–∏
        processing_msg = await message.reply_text("üîÑ –û–±—Ä–∞–±–∞—Ç—ã–≤–∞—é –≤–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ...")
        
        # –ò–º–∏—Ç–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É
        await processing_msg.edit_text("üß† –ê–Ω–∞–ª–∏–∑–∏—Ä—É—é –≤–∞—à –∑–∞–ø—Ä–æ—Å...")
        
        # –ù–µ–±–æ–ª—å—à–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ –¥–ª—è —Ä–µ–∞–ª–∏—Å—Ç–∏—á–Ω–æ—Å—Ç–∏
        import asyncio
        await asyncio.sleep(1)
        
        await processing_msg.edit_text("üîç –ò—â—É –¥–µ—Ç–∞–ª–∏ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö...")
        await asyncio.sleep(1)
        
        await processing_msg.edit_text("üìä –°–æ–∑–¥–∞—é —Ä–µ–∑—É–ª—å—Ç–∞—Ç...")
        await asyncio.sleep(1)
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
        current_time = datetime.now().strftime("%d.%m.%Y %H:%M")
        
        response = f"""ü§ñ **–†–µ–∑—É–ª—å—Ç–∞—Ç –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∑–∞–ø—Ä–æ—Å–∞**

üìù **–í–∞—à –∑–∞–ø—Ä–æ—Å:** {user_message}

‚ö†Ô∏è **–í–Ω–∏–º–∞–Ω–∏–µ:** –ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç –≤ –ª–µ–≥–∫–æ–º —Ä–µ–∂–∏–º–µ.
–ü–æ–ª–Ω–∞—è AI —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–∞ –ø–æ—Å–ª–µ —Ä–µ—à–µ–Ω–∏—è –ø—Ä–æ–±–ª–µ–º —Å –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—è–º–∏.

üîß **–°—Ç–∞—Ç—É—Å:** –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π —Ä–∞–±–æ—Ç–∞–µ—Ç, –Ω–æ –±–µ–∑ AI –∞–Ω–∞–ª–∏–∑–∞.

üìÖ **–í—Ä–µ–º—è –æ–±—Ä–∞–±–æ—Ç–∫–∏:** {current_time}

üí° **–î–ª—è –ø–æ–ª–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏:**
‚Ä¢ –û—Ç–ø—Ä–∞–≤—å—Ç–µ –æ–ø–∏—Å–∞–Ω–∏–µ –∫—Ä–µ–ø–µ–∂–∞ –±–æ–ª–µ–µ –¥–µ—Ç–∞–ª—å–Ω–æ
‚Ä¢ –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ —Ç–µ—Ä–º–∏–Ω—ã
‚Ä¢ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /help –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø—Ä–∞–≤–∫–∏"""

        await processing_msg.edit_text(response)
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –¥–ª—è –æ—Ü–µ–Ω–∫–∏ —Ä–∞–±–æ—Ç—ã –±–æ—Ç–∞
        keyboard = [
            [
                InlineKeyboardButton("‚úÖ –î–∞, —Å–ø—Ä–∞–≤–∏–ª—Å—è", callback_data=f"rating_good_{user.id}"),
                InlineKeyboardButton("‚ùå –ù–µ—Ç, –Ω–µ —Å–ø—Ä–∞–≤–∏–ª—Å—è", callback_data=f"rating_bad_{user.id}")
            ],
            [
                InlineKeyboardButton("‚ö†Ô∏è –ù–µ —Å–æ–≤—Å–µ–º", callback_data=f"rating_partial_{user.id}"),
                InlineKeyboardButton("‚ùì –ù–µ –∑–Ω–∞—é", callback_data=f"rating_unknown_{user.id}")
            ]
        ]
        reply_markup = InlineKeyboardMarkup(keyboard)
        
        await message.reply_text(
            "ü§ñ **–û—Ü–µ–Ω–∏—Ç–µ —Ä–∞–±–æ—Ç—É –±–æ—Ç–∞:**\n\n–°–ø—Ä–∞–≤–∏–ª—Å—è –ª–∏ –±–æ—Ç —Å –≤–∞—à–∏–º –∑–∞–ø—Ä–æ—Å–æ–º?",
            reply_markup=reply_markup
        )
        
        logger.info(f"–£—Å–ø–µ—à–Ω–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω —Ç–µ–∫—Å—Ç–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user.id}")
        
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")
        try:
            await update.message.reply_text("‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.")
        except:
            pass

async def _handle_photo_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ñ–æ—Ç–æ"""
    try:
        message = update.message
        user = update.effective_user
        
        logger.info(f"–ü–æ–ª—É—á–µ–Ω–æ —Ñ–æ—Ç–æ –æ—Ç {user.id}")
        
        response = f"""üì∏ **–§–æ—Ç–æ –ø–æ–ª—É—á–µ–Ω–æ!**

‚ö†Ô∏è **–í–Ω–∏–º–∞–Ω–∏–µ:** –ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç –≤ –ª–µ–≥–∫–æ–º —Ä–µ–∂–∏–º–µ.
–ê–Ω–∞–ª–∏–∑ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–µ–Ω –ø–æ—Å–ª–µ —Ä–µ—à–µ–Ω–∏—è –ø—Ä–æ–±–ª–µ–º —Å –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—è–º–∏.

üîß **–°—Ç–∞—Ç—É—Å:** –ó–∞–≥—Ä—É–∑–∫–∞ —Ñ–æ—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç, –Ω–æ –±–µ–∑ AI –∞–Ω–∞–ª–∏–∑–∞.

üí° **–î–ª—è –∞–Ω–∞–ª–∏–∑–∞ —Ñ–æ—Ç–æ:**
‚Ä¢ –í –±—É–¥—É—â–µ–º –∑–¥–µ—Å—å –±—É–¥–µ—Ç OCR –¥–ª—è –∏–∑–≤–ª–µ—á–µ–Ω–∏—è —Ç–µ–∫—Å—Ç–∞
‚Ä¢ –ü–æ–∫–∞ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –æ–ø–∏—Å–∞—Ç—å –∫—Ä–µ–ø–µ–∂ —Ç–µ–∫—Å—Ç–æ–º"""

        await message.reply_text(response)
        
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Ñ–æ—Ç–æ: {e}")
        try:
            await update.message.reply_text("‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Ñ–æ—Ç–æ.")
        except:
            pass

async def _handle_voice_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≥–æ–ª–æ—Å–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π"""
    try:
        message = update.message
        user = update.effective_user
        
        logger.info(f"–ü–æ–ª—É—á–µ–Ω–æ –≥–æ–ª–æ—Å–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç {user.id}")
        
        response = f"""üé§ **–ì–æ–ª–æ—Å–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—É—á–µ–Ω–æ!**

‚ö†Ô∏è **–í–Ω–∏–º–∞–Ω–∏–µ:** –ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç –≤ –ª–µ–≥–∫–æ–º —Ä–µ–∂–∏–º–µ.
–†–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏–µ —Ä–µ—á–∏ –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–æ –ø–æ—Å–ª–µ —Ä–µ—à–µ–Ω–∏—è –ø—Ä–æ–±–ª–µ–º —Å –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—è–º–∏.

üîß **–°—Ç–∞—Ç—É—Å:** –ó–∞–≥—Ä—É–∑–∫–∞ –≥–æ–ª–æ—Å–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π —Ä–∞–±–æ—Ç–∞–µ—Ç, –Ω–æ –±–µ–∑ —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏—è —Ä–µ—á–∏.

üí° **–î–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –≥–æ–ª–æ—Å–∞:**
‚Ä¢ –í –±—É–¥—É—â–µ–º –∑–¥–µ—Å—å –±—É–¥–µ—Ç Speech-to-Text
‚Ä¢ –ü–æ–∫–∞ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –æ–ø–∏—Å–∞—Ç—å –∫—Ä–µ–ø–µ–∂ —Ç–µ–∫—Å—Ç–æ–º"""

        await message.reply_text(response)
        
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")
        try:
            await update.message.reply_text("‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è.")
        except:
            pass

async def _handle_document_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤"""
    try:
        message = update.message
        user = update.effective_user
        document = message.document
        
        logger.info(f"–ü–æ–ª—É—á–µ–Ω –¥–æ–∫—É–º–µ–Ω—Ç –æ—Ç {user.id}: {document.file_name}")
        
        response = f"""üìÑ **–î–æ–∫—É–º–µ–Ω—Ç –ø–æ–ª—É—á–µ–Ω!**

üìÅ **–§–∞–π–ª:** {document.file_name}
üìä **–†–∞–∑–º–µ—Ä:** {document.file_size} –±–∞–π—Ç

‚ö†Ô∏è **–í–Ω–∏–º–∞–Ω–∏–µ:** –ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç –≤ –ª–µ–≥–∫–æ–º —Ä–µ–∂–∏–º–µ.
–ü–∞—Ä—Å–∏–Ω–≥ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–µ–Ω –ø–æ—Å–ª–µ —Ä–µ—à–µ–Ω–∏—è –ø—Ä–æ–±–ª–µ–º —Å –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—è–º–∏.

üîß **–°—Ç–∞—Ç—É—Å:** –ó–∞–≥—Ä—É–∑–∫–∞ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ —Ä–∞–±–æ—Ç–∞–µ—Ç, –Ω–æ –±–µ–∑ –ø–∞—Ä—Å–∏–Ω–≥–∞ —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ.

üí° **–î–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤:**
‚Ä¢ –í –±—É–¥—É—â–µ–º –∑–¥–µ—Å—å –±—É–¥–µ—Ç –ø–∞—Ä—Å–∏–Ω–≥ Excel/PDF —Ñ–∞–π–ª–æ–≤
‚Ä¢ –ü–æ–∫–∞ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –æ–ø–∏—Å–∞—Ç—å –∫—Ä–µ–ø–µ–∂ —Ç–µ–∫—Å—Ç–æ–º"""

        await message.reply_text(response)
        
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –¥–æ–∫—É–º–µ–Ω—Ç–∞: {e}")
        try:
            await update.message.reply_text("‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –¥–æ–∫—É–º–µ–Ω—Ç–∞.")
        except:
            pass

async def handle_rating_callback(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∫–Ω–æ–ø–∫–∏ –æ—Ü–µ–Ω–∫–∏ —Ä–∞–±–æ—Ç—ã –±–æ—Ç–∞"""
    try:
        query = update.callback_query
        await query.answer()
        
        # –ò–∑–≤–ª–µ–∫–∞–µ–º —Ç–∏–ø –æ—Ü–µ–Ω–∫–∏ –∏ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        callback_data = query.data
        if callback_data.startswith("rating_"):
            rating_type = callback_data.split("_")[1]  # good, bad, partial, unknown
            user_id = callback_data.split("_")[2]
            
            # –õ–æ–≥–∏—Ä—É–µ–º –æ—Ü–µ–Ω–∫—É
            logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id} –æ—Ü–µ–Ω–∏–ª —Ä–∞–±–æ—Ç—É –±–æ—Ç–∞: {rating_type}")
            
            # –û—Ç–≤–µ—á–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
            rating_messages = {
                "good": "‚úÖ –°–ø–∞—Å–∏–±–æ –∑–∞ –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—É—é –æ—Ü–µ–Ω–∫—É!",
                "bad": "‚ùå –°–ø–∞—Å–∏–±–æ –∑–∞ –æ–±—Ä–∞—Ç–Ω—É—é —Å–≤—è–∑—å. –ú—ã —Ä–∞–±–æ—Ç–∞–µ–º –Ω–∞–¥ —É–ª—É—á—à–µ–Ω–∏–µ–º.",
                "partial": "‚ö†Ô∏è –ü–æ–Ω—è—Ç–Ω–æ, –µ—Å—Ç—å –Ω–∞–¥ —á–µ–º –ø–æ—Ä–∞–±–æ—Ç–∞—Ç—å.",
                "unknown": "‚ùì –°–ø–∞—Å–∏–±–æ –∑–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –±–æ—Ç–∞!"
            }
            
            await query.edit_message_text(
                rating_messages.get(rating_type, "–°–ø–∞—Å–∏–±–æ –∑–∞ –æ—Ü–µ–Ω–∫—É!"),
                reply_markup=None
            )
            
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ callback: {e}")
        try:
            await query.answer("‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –æ—Ü–µ–Ω–∫–∏.")
        except:
            pass
