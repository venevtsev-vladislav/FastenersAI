#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ fallback —Å–µ—Ä–≤–∏—Å–∞ –¥–ª—è –Ω–µ—É–¥–∞—á–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤
"""

import sys
import os
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

import asyncio
from services.query_fallback_service import QueryFallbackService

async def test_fallback_service():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç fallback —Å–µ—Ä–≤–∏—Å"""
    fallback_service = QueryFallbackService()
    
    # –¢–µ—Å—Ç–æ–≤—ã–µ –Ω–µ—É–¥–∞—á–Ω—ã–µ –∑–∞–ø—Ä–æ—Å—ã
    test_queries = [
        "–∫–∞–∫–∞—è-—Ç–æ —à—Ç—É–∫–∞ –¥–ª—è –∫—Ä–µ–ø–ª–µ–Ω–∏—è",           # –ù–µ—è—Å–Ω—ã–π –∑–∞–ø—Ä–æ—Å
        "–±–æ–ª—Ç —Å —á–µ–º-—Ç–æ —Ç–∞–º",                       # –ù–µ–ø–æ–ª–Ω—ã–π –∑–∞–ø—Ä–æ—Å
        "–≤–∏–Ω—Ç –¥–ª—è –º–µ–±–µ–ª–∏",                         # –ù–µ—è—Å–Ω–æ–µ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏–µ
        "—á—Ç–æ-—Ç–æ –º–µ—Ç–∞–ª–ª–∏—á–µ—Å–∫–æ–µ",                    # –û—á–µ–Ω—å –Ω–µ—è—Å–Ω—ã–π –∑–∞–ø—Ä–æ—Å
        "–±–æ–ª—Ç —Å –≥—Ä–∏–±–∫–æ–º –ú6 –Ω–∞ 40, —Ü–∏–Ω–∫–æ–≤–∞–Ω–Ω—ã–π",   # –°–ª–æ–∂–Ω—ã–π, –Ω–æ –ø–æ–Ω—è—Ç–Ω—ã–π
        "–≤–∏–Ω—Ç –º–µ–±–µ–ª—å–Ω—ã–π 6 –º–º –¥–ª–∏–Ω–æ–π 40",          # –ù–µ—Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∞—è —Ñ–æ—Ä–º—É–ª–∏—Ä–æ–≤–∫–∞
        "–≥–∞–π–∫–∞ —à–µ—Å—Ç–∏–≥—Ä–∞–Ω–Ω–∞—è –ú8",                   # –ù–µ–ø–æ–ª–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
    ]
    
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ fallback —Å–µ—Ä–≤–∏—Å–∞\n")
    
    for query in test_queries:
        print(f"üìù –ó–∞–ø—Ä–æ—Å: {query}")
        
        # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –Ω–µ—É–¥–∞—á–Ω—ã–π –∑–∞–ø—Ä–æ—Å
        fallback_result = await fallback_service.process_failed_query(
            original_query=query,
            search_results=[]  # –ü—É—Å—Ç—ã–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
        )
        
        print(f"   üìä –†–µ–∑—É–ª—å—Ç–∞—Ç: {fallback_result.get('reason', '')}")
        print(f"   ü§ñ –ú–æ–∂–µ—Ç –Ω–æ—Ä–º–∞–ª–∏–∑–æ–≤–∞—Ç—å: {fallback_result.get('can_normalize', False)}")
        
        if fallback_result.get('can_normalize'):
            print(f"   ‚úÖ –ù–æ—Ä–º–∞–ª–∏–∑–æ–≤–∞–Ω–Ω—ã–π –∑–∞–ø—Ä–æ—Å: {fallback_result.get('normalized_query', '')}")
        else:
            print(f"   ‚ùå –û–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å: {fallback_result.get('ai_feedback', '')[:100]}...")
        
        # –ü–æ–ª—É—á–∞–µ–º –ø–æ–Ω—è—Ç–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        user_message = fallback_service.get_user_friendly_message(fallback_result)
        print(f"   üí¨ –°–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é: {user_message[:100]}...")
        
        print("-" * 60)

if __name__ == "__main__":
    asyncio.run(test_fallback_service())
