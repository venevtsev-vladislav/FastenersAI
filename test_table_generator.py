#!/usr/bin/env python3
"""
–¢–µ—Å—Ç —Å–µ—Ä–≤–∏—Å–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Ç–∞–±–ª–∏—Ü
"""

import asyncio
import sys
import os
import json

# –î–æ–±–∞–≤–ª—è–µ–º —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫—É—é –ø–∞–ø–∫—É –≤ –ø—É—Ç—å –¥–ª—è –∏–º–ø–æ—Ä—Ç–∞
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

from table_generator_service import get_table_generator_service
from railway_logging import setup_railway_logging

async def test_table_generator():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–µ—Ä–≤–∏—Å –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Ç–∞–±–ª–∏—Ü"""
    
    print("üîç –¢–ï–°–¢ –°–ï–†–í–ò–°–ê –ì–ï–ù–ï–†–ê–¶–ò–ò –¢–ê–ë–õ–ò–¶")
    print("=" * 50)
    
    # –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
    setup_railway_logging()
    
    try:
        # –ü–æ–ª—É—á–∞–µ–º —Å–µ—Ä–≤–∏—Å
        service = get_table_generator_service()
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö
        print("\nüìä –¢–ï–°–¢–ò–†–£–ï–ú –ü–û–õ–£–ß–ï–ù–ò–ï –î–ê–ù–ù–´–•")
        print("-" * 30)
        
        data = await service.get_analysis_data(days=30)
        
        print(f"‚úÖ –ó–∞–ø—Ä–æ—Å–æ–≤: {len(data['requests'])}")
        print(f"‚úÖ –ü–æ–∑–∏—Ü–∏–π: {len(data['items'])}")
        print(f"‚úÖ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞: {json.dumps(data['statistics'], ensure_ascii=False, indent=2)}")
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –≥–µ–Ω–µ—Ä–∞—Ü–∏—é Excel
        print("\nüìä –¢–ï–°–¢–ò–†–£–ï–ú –ì–ï–ù–ï–†–ê–¶–ò–Æ EXCEL")
        print("-" * 30)
        
        excel_file = await service.generate_excel_report(days=30)
        
        if excel_file:
            print(f"‚úÖ Excel —Ñ–∞–π–ª —Å–æ–∑–¥–∞–Ω: {excel_file}")
            if os.path.exists(excel_file):
                file_size = os.path.getsize(excel_file)
                print(f"üìÅ –†–∞–∑–º–µ—Ä: {file_size / 1024:.1f} KB")
        else:
            print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å Excel —Ñ–∞–π–ª")
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –≥–µ–Ω–µ—Ä–∞—Ü–∏—é CSV
        print("\nüìä –¢–ï–°–¢–ò–†–£–ï–ú –ì–ï–ù–ï–†–ê–¶–ò–Æ CSV")
        print("-" * 30)
        
        csv_file = await service.generate_csv_report(days=30)
        
        if csv_file:
            print(f"‚úÖ CSV —Ñ–∞–π–ª —Å–æ–∑–¥–∞–Ω: {csv_file}")
            if os.path.exists(csv_file):
                file_size = os.path.getsize(csv_file)
                print(f"üìÅ –†–∞–∑–º–µ—Ä: {file_size / 1024:.1f} KB")
        else:
            print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å CSV —Ñ–∞–π–ª")
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–≤–æ–¥–Ω—ã–π –æ—Ç—á–µ—Ç
        print("\nüìä –¢–ï–°–¢–ò–†–£–ï–ú –°–í–û–î–ù–´–ô –û–¢–ß–ï–¢")
        print("-" * 30)
        
        summary = await service.get_summary_report(days=30)
        print(f"‚úÖ –°–≤–æ–¥–Ω—ã–π –æ—Ç—á–µ—Ç: {json.dumps(summary, ensure_ascii=False, indent=2)}")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        import traceback
        traceback.print_exc()
    
    print("\nüéâ –¢–ï–°–¢ –ó–ê–í–ï–†–®–ï–ù!")
    print("=" * 50)

if __name__ == "__main__":
    asyncio.run(test_table_generator())
