name: Deploy FastenersAI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

env:
  PYTHON_VERSION: '3.13'

jobs:
  test:
    runs-on: ubuntu-latest
    name: Test and Lint
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION }}
        
    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
          
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest pytest-cov flake8 black
        
    - name: Run linting
      run: |
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        black --check --diff .
        
    - name: Run tests
      run: |
        python -m pytest tests/ -v --cov=. --cov-report=xml
        
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella

  deploy-supabase:
    runs-on: ubuntu-latest
    needs: test
    name: Deploy to Supabase
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Supabase CLI
      uses: supabase/setup-cli@v1
      with:
        version: latest
        
    - name: Deploy Supabase functions
      env:
        SUPABASE_ACCESS_TOKEN: ${{ secrets.SUPABASE_ACCESS_TOKEN }}
        SUPABASE_DB_PASSWORD: ${{ secrets.SUPABASE_DB_PASSWORD }}
      run: |
        supabase link --project-ref ${{ secrets.SUPABASE_PROJECT_ID }}
        supabase functions deploy fastener-search --project-ref ${{ secrets.SUPABASE_PROJECT_ID }}

  deploy-heroku:
    runs-on: ubuntu-latest
    needs: test
    name: Deploy to Heroku
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Deploy to Heroku
      uses: akhileshns/heroku-deploy@v3.12.14
      with:
        heroku_api_key: ${{ secrets.HEROKU_API_KEY }}
        heroku_app_name: ${{ secrets.HEROKU_APP_NAME }}
        heroku_email: ${{ secrets.HEROKU_EMAIL }}
        appdir: "."

  deploy-railway:
    runs-on: ubuntu-latest
    needs: test
    name: Deploy to Railway
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Deploy to Railway
      uses: railway/deploy@v1.0.0
      with:
        railway_token: ${{ secrets.RAILWAY_TOKEN }}
        service: ${{ secrets.RAILWAY_SERVICE }}

  deploy-docker:
    runs-on: ubuntu-latest
    needs: test
    name: Build and Push Docker Image
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
        
    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: |
          ${{ secrets.DOCKER_USERNAME }}/fastenersai:latest
          ${{ secrets.DOCKER_USERNAME }}/fastenersai:${{ github.sha }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

  notify:
    runs-on: ubuntu-latest
    needs: [deploy-supabase, deploy-heroku, deploy-railway, deploy-docker]
    name: Notify deployment status
    if: always()
    
    steps:
    - name: Notify Telegram
      uses: appleboy/telegram-action@master
      with:
        to: ${{ secrets.TELEGRAM_CHAT_ID }}
        token: ${{ secrets.TELEGRAM_BOT_TOKEN }}
        message: |
          üöÄ FastenersAI Deployment Status
          
          ‚úÖ Test: ${{ needs.test.result }}
          ‚úÖ Supabase: ${{ needs.deploy-supabase.result }}
          ‚úÖ Heroku: ${{ needs.deploy-heroku.result }}
          ‚úÖ Railway: ${{ needs.deploy-railway.result }}
          ‚úÖ Docker: ${{ needs.deploy-docker.result }}
          
          üìç Commit: ${{ github.sha }}
          üîó URL: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
