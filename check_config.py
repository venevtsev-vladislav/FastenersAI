#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –ø–µ—Ä–µ–¥ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ–º
"""

import os
import sys
from dotenv import load_dotenv

def check_config():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è"""
    print("üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é FastenersAI Bot...")
    
    # –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
    load_dotenv()
    
    errors = []
    warnings = []
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
    required_vars = {
        'TELEGRAM_BOT_TOKEN': '–¢–æ–∫–µ–Ω Telegram –±–æ—Ç–∞',
        'OPENAI_API_KEY': 'API –∫–ª—é—á OpenAI',
        'SUPABASE_URL': 'URL Supabase',
        'SUPABASE_KEY': '–ö–ª—é—á Supabase'
    }
    
    for var, description in required_vars.items():
        value = os.getenv(var)
        if not value:
            errors.append(f"‚ùå {var} –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: {description}")
        elif value.startswith('your_') or value.endswith('_here'):
            errors.append(f"‚ùå {var} —Å–æ–¥–µ—Ä–∂–∏—Ç placeholder –∑–Ω–∞—á–µ–Ω–∏–µ: {description}")
        else:
            print(f"‚úÖ {var}: —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
    optional_vars = {
        'PORT': '–ü–æ—Ä—Ç –¥–ª—è Railway (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é 8000)',
        'OPENAI_MODEL': '–ú–æ–¥–µ–ª—å OpenAI (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é gpt-4)'
    }
    
    for var, description in optional_vars.items():
        value = os.getenv(var)
        if value:
            print(f"‚úÖ {var}: {value}")
        else:
            print(f"‚ÑπÔ∏è  {var}: –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω (–±—É–¥–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–æ –∑–Ω–∞—á–µ–Ω–∏–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é)")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–∞–π–ª—ã
    required_files = [
        'bot.py',
        'config.py',
        'Procfile',
        'requirements.txt',
        'runtime.txt'
    ]
    
    for file in required_files:
        if os.path.exists(file):
            print(f"‚úÖ {file}: –Ω–∞–π–¥–µ–Ω")
        else:
            errors.append(f"‚ùå {file}: –Ω–µ –Ω–∞–π–¥–µ–Ω")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
    try:
        import telegram
        print("‚úÖ python-telegram-bot: —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
    except ImportError:
        errors.append("‚ùå python-telegram-bot: –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
    
    try:
        import openai
        print("‚úÖ openai: —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
    except ImportError:
        errors.append("‚ùå openai: –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
    
    try:
        import supabase
        print("‚úÖ supabase: —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
    except ImportError:
        errors.append("‚ùå supabase: –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Supabase
    if os.getenv('SUPABASE_URL') and os.getenv('SUPABASE_KEY'):
        try:
            from supabase import create_client, Client
            url = os.getenv('SUPABASE_URL')
            key = os.getenv('SUPABASE_KEY')
            supabase_client: Client = create_client(url, key)
            print("‚úÖ Supabase: –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ")
        except Exception as e:
            warnings.append(f"‚ö†Ô∏è  Supabase: –æ—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è - {e}")
    
    # –í—ã–≤–æ–¥–∏–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
    print("\n" + "="*50)
    print("üìä –†–ï–ó–£–õ–¨–¢–ê–¢–´ –ü–†–û–í–ï–†–ö–ò")
    print("="*50)
    
    if errors:
        print("\n‚ùå –û–®–ò–ë–ö–ò:")
        for error in errors:
            print(f"  {error}")
    
    if warnings:
        print("\n‚ö†Ô∏è  –ü–†–ï–î–£–ü–†–ï–ñ–î–ï–ù–ò–Ø:")
        for warning in warnings:
            print(f"  {warning}")
    
    if not errors and not warnings:
        print("\n‚úÖ –í–°–ï –ü–†–û–í–ï–†–ö–ò –ü–†–û–ô–î–ï–ù–´ –£–°–ü–ï–®–ù–û!")
        print("üöÄ –ì–æ—Ç–æ–≤–æ –∫ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—é –Ω–∞ Railway")
        return True
    elif not errors:
        print("\n‚úÖ –ö–†–ò–¢–ò–ß–ï–°–ö–ò–• –û–®–ò–ë–û–ö –ù–ï–¢")
        print("‚ö†Ô∏è  –ï—Å—Ç—å –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è, –Ω–æ –º–æ–∂–Ω–æ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞—Ç—å")
        return True
    else:
        print("\n‚ùå –ï–°–¢–¨ –ö–†–ò–¢–ò–ß–ï–°–ö–ò–ï –û–®–ò–ë–ö–ò")
        print("üîß –ò—Å–ø—Ä–∞–≤—å—Ç–µ –æ—à–∏–±–∫–∏ –ø–µ—Ä–µ–¥ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ–º")
        return False

if __name__ == "__main__":
    success = check_config()
    sys.exit(0 if success else 1)
