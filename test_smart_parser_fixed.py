#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–≥–æ SmartParser
"""

import sys
import os
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

from services.smart_parser import SmartParser

def test_smart_parser():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–π SmartParser"""
    parser = SmartParser()
    
    # –¢–µ—Å—Ç–æ–≤—ã–µ –∑–∞–ø—Ä–æ—Å—ã
    test_queries = [
        "–ë–æ–ª—Ç—ã DIN603 –ú6—Ö40, —Ü–∏–Ω–∫ (—Ç—ã—Å.—à—Ç)",           # –î–æ–ª–∂–µ–Ω —Ä–∞–±–æ—Ç–∞—Ç—å (–∫–∞–∫ —Ä–∞–Ω—å—à–µ)
        "–±–æ–ª—Ç —Å –≥—Ä–∏–±–∫–æ–º –ú6 –Ω–∞ 40, —Ü–∏–Ω–∫–æ–≤–∞–Ω–Ω—ã–π",         # –î–æ–ª–∂–µ–Ω —Ä–∞–±–æ—Ç–∞—Ç—å (–Ω–æ–≤—ã–π)
        "–ë–æ–ª—Ç DIN 603 –ú6√ó40 Zn",                        # –î–æ–ª–∂–µ–Ω —Ä–∞–±–æ—Ç–∞—Ç—å (–Ω–æ–≤—ã–π)
        "–±–æ–ª—Ç –ú6x40 —Ü–∏–Ω–∫",                              # –î–æ–ª–∂–µ–Ω —Ä–∞–±–æ—Ç–∞—Ç—å (–Ω–æ–≤—ã–π)
        "–≤–∏–Ω—Ç M6 20 –º–º",                                # –î–æ–ª–∂–µ–Ω —Ä–∞–±–æ—Ç–∞—Ç—å (–∫–∞–∫ —Ä–∞–Ω—å—à–µ)
        "–≥–∞–π–∫–∞ DIN 985 M6 –Ω–µ—Ä–∂–∞–≤–µ—é—â–∞—è —Å—Ç–∞–ª—å A2",        # –î–æ–ª–∂–µ–Ω —Ä–∞–±–æ—Ç–∞—Ç—å (–∫–∞–∫ —Ä–∞–Ω—å—à–µ)
    ]
    
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–≥–æ SmartParser\n")
    
    for query in test_queries:
        print(f"üìù –ó–∞–ø—Ä–æ—Å: {query}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω—É–∂–µ–Ω –ª–∏ GPT
        need_gpt = parser.should_use_gpt(query)
        print(f"   ü§ñ –ù—É–∂–µ–Ω GPT: {need_gpt}")
        
        # –ü–∞—Ä—Å–∏–º –∑–∞–ø—Ä–æ—Å
        result = parser.parse_query(query)
        print(f"   üìä –†–µ–∑—É–ª—å—Ç–∞—Ç: {result}")
        
        if not need_gpt:
            print(f"   ‚úÖ –†–∞—Å–ø–æ–∑–Ω–∞–Ω –∫–∞–∫ –ø—Ä–æ—Å—Ç–æ–π: {result.get('user_intent', {})}")
        else:
            print(f"   üîç –û—Ç–ø—Ä–∞–≤–ª–µ–Ω –≤ GPT: {result.get('reason', '')}")
        
        print("-" * 60)

if __name__ == "__main__":
    test_smart_parser()
