#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–æ—Å—Ç–æ—è–Ω–∏—è —Ç–∞–±–ª–∏—Ü –≤ Supabase
"""

import os
from dotenv import load_dotenv
from supabase import create_client, Client

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
load_dotenv()

def check_supabase():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏–µ Supabase"""
    
    # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
    supabase_url = os.getenv('SUPABASE_URL')
    supabase_key = os.getenv('SUPABASE_KEY')
    
    if not supabase_url or not supabase_key:
        print("‚ùå –û—à–∏–±–∫–∞: SUPABASE_URL –∏–ª–∏ SUPABASE_KEY –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã –≤ .env")
        return
    
    print(f"üîó –ü–æ–¥–∫–ª—é—á–∞—é—Å—å –∫ Supabase: {supabase_url}")
    
    try:
        # –°–æ–∑–¥–∞–µ–º –∫–ª–∏–µ–Ω—Ç
        supabase: Client = create_client(supabase_url, supabase_key)
        print("‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Supabase —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ —Ç–∞–±–ª–∏—Ü—ã
        print("\nüìä –ü—Ä–æ–≤–µ—Ä—è—é —Ç–∞–±–ª–∏—Ü—ã...")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º aliases
        try:
            response = supabase.table('aliases').select('count', count='exact').execute()
            print(f"üìã aliases: {response.count} –∑–∞–ø–∏—Å–µ–π")
        except Exception as e:
            print(f"‚ùå aliases: –æ—à–∏–±–∫–∞ - {e}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º parts_catalog
        try:
            response = supabase.table('parts_catalog').select('count', count='exact').execute()
            print(f"üì¶ parts_catalog: {response.count} –∑–∞–ø–∏—Å–µ–π")
        except Exception as e:
            print(f"‚ùå parts_catalog: –æ—à–∏–±–∫–∞ - {e}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º search_suggestions
        try:
            response = supabase.table('search_suggestions').select('count', count='exact').execute()
            print(f"üí° search_suggestions: {response.count} –∑–∞–ø–∏—Å–µ–π")
        except Exception as e:
            print(f"‚ùå search_suggestions: –æ—à–∏–±–∫–∞ - {e}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º user_requests
        try:
            response = supabase.table('user_requests').select('count', count='exact').execute()
            print(f"üìù user_requests: {response.count} –∑–∞–ø–∏—Å–µ–π")
        except Exception as e:
            print(f"‚ùå user_requests: –æ—à–∏–±–∫–∞ - {e}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º file_uploads
        try:
            response = supabase.table('file_uploads').select('count', count='exact').execute()
            print(f"üìÅ file_uploads: {response.count} –∑–∞–ø–∏—Å–µ–π")
        except Exception as e:
            print(f"‚ùå file_uploads: –æ—à–∏–±–∫–∞ - {e}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º search_history
        try:
            response = supabase.table('search_history').select('count', count='exact').execute()
            print(f"üîç search_history: {response.count} –∑–∞–ø–∏—Å–µ–π")
        except Exception as e:
            print(f"‚ùå search_history: –æ—à–∏–±–∫–∞ - {e}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º bot_statistics
        try:
            response = supabase.table('bot_statistics').select('count', count='exact').execute()
            print(f"üìà bot_statistics: {response.count} –∑–∞–ø–∏—Å–µ–π")
        except Exception as e:
            print(f"‚ùå bot_statistics: –æ—à–∏–±–∫–∞ - {e}")
        
        print("\n‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Supabase: {e}")

if __name__ == "__main__":
    check_supabase()

